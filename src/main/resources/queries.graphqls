
type Query {
    search: SearchQuery
    items(type:ItemType): [Item!]!
}

interface Item {
    id:String!
    name:String!
    score:Float!
}

enum ItemType {
    MUSIC
}

type SearchQuery {
    artists(name:String) : [SearchResult!]!
    albums(artistId:String!, pageNumber:Int): PaginatedAlbumResult!
    tracks(albumId:String!): [TrackSearchResult!]!
}
type PaginatedAlbumResult {
    results:  [AlbumSearchResult!]!
    pageNumber: Int!
}
type SearchResult {
    name:String!
    id:String!
    images:[Image!]!
}
type AlbumSearchResult {
    id:String!
    name:String!
    images:[Image!]!
    year: String
}
type Image {
    width:Int!
    height:Int!
    url:String!
}
type TrackSearchResult {
    name:String!
    trackNumber:Int!
    discNumber:Int!
    id:String!
}
