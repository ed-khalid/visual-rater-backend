interface Item {
id:String!
name:String!
score:Float
}

enum ItemType {
MUSIC
}

type Song implements Item {
    id:String!
    score:Float
    name: String!
    number:Int!
    discNumber:Int!
}

type Album {
    id: String!
    name: String!
    year: Int
    thumbnail: String
    dominantColor: String
    songs:[Song!]!
    score:Float
}

interface Page {
    total: Int!
    pageNumber: Int!
    content:[Pageable]
}

interface Pageable {
    id:String!
}

type ArtistPage implements Page {
    total:Int!
    pageNumber:Int!
    content:[Artist]!
}

type Artist implements Pageable {
    id: String!
    name:String!
    thumbnail: String
    albums:[Album]
    score: Float
    metadata:ArtistMetadata
}

type ArtistSongMetadata {
    classic:Int!
    great:Int!
    good:Int!
    mediocre:Int!
    bad:Int!
    terrible:Int!
    classicPercentage:Float!
    greatPercentage:Float!
    goodPercentage:Float!
    mediocrePercentage:Float!
    badPercentage:Float!
    terriblePercentage:Float!
}

type ArtistMetadata {
    id:String!
    songs:ArtistSongMetadata!
    totalSongs:Int!
    totalAlbums:Int!
}
